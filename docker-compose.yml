version: "3.8"

services:
  db:
    image: postgres:16
    shm_size: 1g
    environment:
      POSTGRES_DB: shopify_data_pruned
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
     - postgres-data:/var/lib/postgresql/data
    #  - ./postgres-init/init-db-shopify.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d shopify_data_pruned"]
      interval: 5s
      timeout: 5s
      retries: 5

  #   rabbitmq:
  #     image: rabbitmq:3-management
  #     hostname: rabbitmq
  #     ports:
  #       - "5672:5672"
  #       - "15672:15672"
  #     healthcheck:
  #       test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
  #       interval: 5s
  #       timeout: 5s
  #       retries: 5

  redpanda-connect:
    image: docker.redpanda.com/redpandadata/connect:latest
    entrypoint: [
        "./redpanda-connect",
        "run",
        "--log.level",
        "trace",
        "/config.yaml",
      ] # substitui ENTRYPOINT
    volumes:
      - ./redpanda-config/test.yaml:/config.yaml
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: shopify_data_pruned
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      CLICKHOUSE_USER: user
      CLICKHOUSE_PASSWORD: password
      CLICKHOUSE_DB: analytics
    depends_on:
      db:
        condition: service_healthy
      #       rabbitmq:
      #         condition: service_healthy
      clickhouse:
        condition: service_healthy

  #   init:
  #     build:
  #       context: ./init-scripts
  #       dockerfile: Dockerfile
  #     volumes:
  #       - init-scripts:/app
  #     command: python verify_rabbitmq.py
  #     depends_on:
  #       rabbitmq:
  #         condition: service_healthy
  #       db:
  #         condition: service_healthy

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123" # HTTP interface
      - "9000:9000" # Native interface
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ./clickhouse-config/init-db.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      CLICKHOUSE_USER: user
      CLICKHOUSE_PASSWORD: password
    healthcheck:
      test:
        ["CMD-SHELL", "wget --spider -q http://localhost:8123/ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
  clickhouse-data:
    driver: local

networks:
  default:
    driver: bridge
