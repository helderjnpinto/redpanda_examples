version: "3.8"

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: redpanda_pipeline
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-init/init-db-dedup-test.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d redpanda_pipeline"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 5s
      timeout: 5s
      retries: 5

  redpanda-connect:
    image: docker.redpanda.com/redpandadata/connect:latest
    command:
      - run
      - /config.yaml
    volumes:
      - ./redpanda-config/pipeline_dedup.yaml:/config.yaml
    environment:
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: redpanda_pipeline
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      CLICKHOUSE_USER: user
      CLICKHOUSE_PASSWORD: password
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      clickhouse:
        condition: service_healthy

  init:
    build:
      context: ./init-scripts
      dockerfile: Dockerfile
    volumes:
      - init-scripts:/app
    command: python verify_rabbitmq.py
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - ./clickhouse-config/custom-config.xml:/etc/clickhouse-server/config.d/custom-config.xml
      - ./clickhouse-config/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - ./clickhouse-config/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - clickhouse-data:/var/lib/clickhouse
    environment:
      CLICKHOUSE_USER: user
      CLICKHOUSE_PASSWORD: password
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8123/ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  init-scripts:
  clickhouse-data:
    driver: local

networks:
  default:
    driver: bridge
